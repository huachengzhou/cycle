<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo Book</title>
    <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/</link>
    <description>Recent content on Hugo Book</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 15 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://huachengzhou.github.io/cycle/books/docs/java/v1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CONTRIBUTING</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_bootstrap-switch_contributing/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_bootstrap-switch_contributing/</guid>
      <description>If you want help us to fix bugs or add a extension please use our develop branch
https://github.com/nostalgiaz/bootstrap-switch/tree/develop
First step:
Please merge your branch develop with nostalgiaz/bootstrap-switch/tree/develop
second step:
Work in the branch develop for fixes
third step:
regularly reviews the branch develop for updates and then merge this with your branch develop
fourth step:
When you&amp;rsquo;re done in your branch send us a PR to merge the two branches</description>
    </item>
    
    <item>
      <title>git</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_git_git/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_git_git/</guid>
      <description>Push master to origin/master was rejected by remote  有三种原因1:push的这个工程是其他人新建的，找她开通master权限后，再次push2:git 工程错误git pullgit pull origin mastergit pull origin master --allow-unrelated-histories3:github 设置原因勾选了Keep my email addresses private解决办法2种第一种 通知账户人员取消勾选第二种重新设置你的全局用户E-mailgit config --list 查看这个时候一定不对因此重新设置全局email重置上次提交的作者信息 git commit --amend --reset-authorgit config --global user.name &amp;quot;zch&amp;quot;git config --global user.email &amp;quot;sdhshd@163.com&amp;quot;ok对了你如果使用的不是idea而是git那么抛出的错误非常明显如果抛出git报错--&amp;gt;! [remote rejected] master -&amp;gt; master (push declined due to email privacy restrictions)那么一定是这个原因 git clone时报RPC failed; curl 18 transfer closed with outstanding read data remaining 错误  原因1：缓存区溢出git config http.</description>
    </item>
    
    <item>
      <title>gitIntroduction</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_git_gitintroduction/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_git_gitintroduction/</guid>
      <description>git学习#git 区域概念# git分为工作区(我们自己的file)和版本库这其中版本库又包含暂存区(Stage)和分支区(master)    git add ********** 把文件添加到仓库
  git reset README.md 取消提交到暂存区域
  git commmit -m &amp;lsquo;xxxx&amp;rsquo; 提交到仓库
  git diff 查看提交到仓库文件之后文件又被修改的变化
  git status 查看状态
  git rm -f gitS.md 强制删除
  git log 显示从最近到最远的提交日志
  git log &amp;ndash;pretty=oneline 只显示版本号
  关于版本回退问题#  git reset &amp;ndash;hard HEAD^ 版本重置为上一个版本
  git 关于版本处理进行了设置</description>
    </item>
    
    <item>
      <title>gitub配置</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_git_gitub%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_git_gitub%E9%85%8D%E7%BD%AE/</guid>
      <description>zhou@zhou-Lenovo-Z480:~$ git versiongit version 2.7.4zhou@zhou-Lenovo-Z480:~$ ssh -T git@github.comWarning: Permanently added the RSA host key for IP address &#39;192.30.255.112&#39; to the list of known hosts.Permission denied (publickey).zhou@zhou-Lenovo-Z480:~$ git config --global user.name &amp;quot;zhouchenhua&amp;quot;zhou@zhou-Lenovo-Z480:~$ git config --global user.email &amp;quot;noatnu@163.com&amp;quot;zhou@zhou-Lenovo-Z480:~$ git config --listuser.name=zhouchenhuauser.email=noatnu@163.comzhou@zhou-Lenovo-Z480:~$ ssh-keygen -C ‘noatnu@163.com’ -t rsaGenerating public/private rsa key pair.Enter file in which to save the key (/home/zhou/.ssh/id_rsa): america347191Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in america347191.</description>
    </item>
    
    <item>
      <title>hugo &gt; tutorials1</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_hugo_hugo_tutorials1/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_hugo_hugo_tutorials1/</guid>
      <description>教程1#快速开始# 步骤1：安装Hugo  brew install hugo# orport install hugo 要验证新安装  hugo version 步骤2：建立新网站  hugo new site quickstart# 上面的代码将在名为的文件夹中创建一个新的Hugo网站quickstart。 步骤3：添加主题  # 首先，从GitHub下载主题并将其添加到您站点的themes目录中：cd quickstartgit initgit submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke 然后，将主题添加到站点配置中：  echo &#39;theme = &amp;quot;ananke&amp;quot;&#39; &amp;gt;&amp;gt; config.toml 步骤4：添加一些内容  hugo new posts/my-first-post.md 如果需要，请编辑新创建的内容文件，该文件将从以下内容开始：   ---title: &amp;quot;My First Post&amp;quot;date: 2019-03-26T08:47:11+01:00draft: true--- 步骤5：启动Hugo服务器  ▶ hugo server -D| EN+------------------+----+Pages | 10Paginator pages | 0Non-page files | 0Static files | 3Processed images | 0Aliases | 1Sitemaps | 1Cleaned | 0Total in 11 msWatching for changes in /Users/bep/quickstart/{content,data,layouts,static,themes}Watching for config changes in /Users/bep/quickstart/config.</description>
    </item>
    
    <item>
      <title>hugo &gt; tutorials2</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_hugo_hugo_tutorials2/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_hugo_hugo_tutorials2/</guid>
      <description>教程2# 1、	创建blog  hugo new site myblog_pubcd myblog_pub/git submodule add https://github.com/chinanf-boy/gohugo-theme-yinwang.git themes/yinwang  2、	修改配置
  vi config.toml
  root@instance-x8rtph4n:/home/go/code/hugo_dir/myblog_pub/public# more ../config.toml baseURL = &amp;quot;http://ypbsyy.github.io/&amp;quot;languageCode = &amp;quot;en-us&amp;quot;title = &amp;quot;我是yaopeng&amp;quot;theme = &amp;quot;yinwang&amp;quot;#pygmentsCodeFences = true#pygmentsCodefencesGuessSyntax = false#pygmentsStyle = &amp;quot;dracula&amp;quot;#pygmentsOptions = [&#39;linenos&#39;]# 代码高亮/chroma，hugo默认自带[params]author = &amp;quot;yaopeng&amp;quot;github = &amp;quot;yaopeng&amp;quot;# gitlab = &amp;quot;yobrave&amp;quot;#googleAnalytics = &amp;quot;****&amp;quot;# 谷歌统计gtaghighlight = &amp;quot;dracula&amp;quot; # 默认样式 `github`langs = [&amp;quot;go&amp;quot;]# 默认加载 highlight.</description>
    </item>
    
    <item>
      <title>idea</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_idea_idea/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_idea_idea/</guid>
      <description> idea 解决working directory 设置到 target  test ng D:\IdeaProjects\java-se-studyrun config $MODULE_DIR$</description>
    </item>
    
    <item>
      <title>java &gt; bitOperation</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_java_java_bitoperation/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_java_java_bitoperation/</guid>
      <description>位运算#  十进制转二进制
  正整数十进制转二进制
   正整数转成二进制。要点一定一定要记住哈：除二取余，然后倒序排列，高位补零。也就是说，将正的十进制数除以二，得到的商再除以二，依次类推直到商为零或一时为止，然后在旁边标出各步的余数，最后倒着写出来，高位补零就OK咧。
  2 |93 1──────2 |46 0────── 2 |23 1──────2 |11 1────── 2|5 1────2|2 0────1 1011101不满足8位所以高位补0 计算机内部表示数的字节单位是定长的，如8位，16位，或32位。所以，位数不够时，高位补零01011101反推回去10111016543210 ==&amp;gt; 2(6)*1+2(5)*0+2(4)*1+2(3)*1+2(2)*1+2(1)*0+2(0)*1 ==》Math.pow(2,6) + Math.pow(2,4) + Math.pow(2,3) +Math.pow(2,2)+1=932 |100 0───────2 |50 0────── 2 |25 1──────2 |12 0────── 2|6 0────2|3 1────1 011001002 |73 1──────2 |36 0────── 2 |18 0──────2 |9 1────── 2|4 0────2|2 0────1 1001001 正小数转换二进制   乘二取整，直到小数为零为止，先整为高位，后整为低位 乘二取整，截取整数，如果还没到整数那么取0，截取后剩余的小数继续乘以2然后再截取整数，直到小数为0为止，这里要注意的是每乘以2后必须截取，然后才能往后继续算</description>
    </item>
    
    <item>
      <title>jsp &gt; EL基础教程</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_el%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B_jsp_el%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_el%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B_jsp_el%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/</guid>
      <description>EL基础教程#El标签语法# ${参数名}
 EL标签的功能#  可以访问JSP中不同的域的对象    可以访问JavaBean中的属性    可以访问集合元素    支持简单的运算操作   访问JSP中不同的域的对象#&amp;lt;%pageContext.setAttribute(&amp;quot;name1&amp;quot;, &amp;quot;zhangsan&amp;quot;);request.setAttribute(&amp;quot;name2&amp;quot;, &amp;quot;lisi&amp;quot;);session.setAttribute(&amp;quot;name3&amp;quot;, &amp;quot;wangwu&amp;quot;);application.setAttribute(&amp;quot;name4&amp;quot;, &amp;quot;liuliu&amp;quot;);%&amp;gt;&amp;lt;!--范围.参数名 --&amp;gt;${pageScope.name1 } ${requestScope.name2 } ${sessionScope.name3 }${applicationScope.name4 }&amp;lt;br&amp;gt;&amp;lt;!-- 直接写参数名称 --&amp;gt;${name1 } ${name2 } ${name3 } ${name4 } 访问JavaBean中的属性#&amp;lt;%User user=new User(&amp;quot;zhangsan&amp;quot;,20,&amp;quot;北京&amp;quot;);request.</description>
    </item>
    
    <item>
      <title>link</title>
      <link>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_assembly_link/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://huachengzhou.github.io/cycle/books/docs/java/v1/uuid_t_assembly_link/</guid>
      <description>bootstrap3整合#&amp;lt;%@include file=&amp;quot;/css/cssBootStrap.jsp&amp;quot; %&amp;gt;bootstrap4整合#&amp;lt;%@include file=&amp;quot;/css/bootstrap4.jsp&amp;quot; %&amp;gt;thymeleaf#&amp;lt;div th:include=&amp;quot;css/cssBootStrap :: html&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;图标## Alibaba国际站图标库${pageContext.request.contextPath}/components/images/Alibaba国际站图标库/all.pngFont Awesome####url http://fontawesome.dashgame.com/##引入方式&amp;lt;link href=&amp;quot;${pageContext.request.contextPath}/components/font-awesome-4.7.0/css/font-awesome.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot;&amp;gt;##基本写法&amp;lt;li class=&amp;quot;list-group-item&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;fa fa-camera-retro&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/li&amp;gt;##大图标&amp;lt;i class=&amp;quot;fa fa-camera-retro fa-lg&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; fa-lg&amp;lt;i class=&amp;quot;fa fa-camera-retro fa-2x&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; fa-2x&amp;lt;i class=&amp;quot;fa fa-camera-retro fa-3x&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; fa-3x&amp;lt;i class=&amp;quot;fa fa-camera-retro fa-4x&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; fa-4x&amp;lt;i class=&amp;quot;fa fa-camera-retro fa-5x&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; fa-5x##固定宽度 使用 fa-fw 可以将图标设置为一个固定宽度。主要用于不同宽度图标无法对齐的情况。 尤其在列表或导航时起到重要作用&amp;lt;div class=&amp;quot;list-group&amp;quot;&amp;gt;&amp;lt;a class=&amp;quot;list-group-item&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;fa fa-home fa-fw&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp; Home&amp;lt;/a&amp;gt;&amp;lt;a class=&amp;quot;list-group-item&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;fa fa-book fa-fw&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp; Library&amp;lt;/a&amp;gt;&amp;lt;a class=&amp;quot;list-group-item&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;fa fa-pencil fa-fw&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp; Applications&amp;lt;/a&amp;gt;&amp;lt;a class=&amp;quot;list-group-item&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;fa fa-cog fa-fw&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;amp;nbsp; Settings&amp;lt;/a&amp;gt;&amp;lt;/div&amp;gt;## 用于列表 使用 fa-ul 和 fa-li 便可以简单的将无序列表的默认符号替换掉&amp;lt;ul class=&amp;quot;fa-ul&amp;quot;&amp;gt;&amp;lt;li&amp;gt;&amp;lt;i class=&amp;quot;fa-li fa fa-check-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;List icons&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;i class=&amp;quot;fa-li fa fa-check-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;can be used&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;i class=&amp;quot;fa-li fa fa-spinner fa-spin&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;as bullets&amp;lt;/li&amp;gt;&amp;lt;li&amp;gt;&amp;lt;i class=&amp;quot;fa-li fa fa-square&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;in lists&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;## 动画 使用 fa-spin 类来使任意图标旋转，现在您还可以使用 fa-pulse 来使其进行8方位旋转。尤其适合 fa-spinner、fa-refresh 和 fa-cog 。&amp;lt;i class=&amp;quot;fa fa-spinner fa-spin&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;i class=&amp;quot;fa fa-circle-o-notch fa-spin&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;i class=&amp;quot;fa fa-refresh fa-spin&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;i class=&amp;quot;fa fa-cog fa-spin&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;i class=&amp;quot;fa fa-spinner fa-pulse&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;## Bootstrap 3 示例Font Awesome 完全兼容 Bootstrap 的所有组件。&amp;lt;a class=&amp;quot;btn btn-danger&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;fa fa-trash-o fa-lg&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; Delete&amp;lt;/a&amp;gt;&amp;lt;a class=&amp;quot;btn btn-default btn-sm&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;fa fa-cog&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; Settings&amp;lt;/a&amp;gt;&amp;lt;a class=&amp;quot;btn btn-lg btn-success&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;fa fa-flag fa-2x pull-left&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; Font Awesome&amp;lt;br&amp;gt;Version 4.</description>
    </item>
    
  </channel>
</rss>
